# Данный манифест представляет собой сборку создаваемых объектов, которые в один клик помогут полноценно развернуть сервис для инфраструктуры.
# В этом файле будет описано развертывание сервиса Prometheus для его дальнейшего внедрения в инфраструктуру общего мониторинга.
#
# ------------------------------------------------------------------------------------------------------------------------------------------
---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    app: prometheus-server
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus-server
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
















# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: prometheus
#   namespace: monitoring
#   labels:
#     app: prometheus-server
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: prometheus
# subjects:
# - kind: ServiceAccount
#   name: prometheus
#   namespace: monitoring
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: prometheus-deployment
#   namespace: monitoring
#   labels:
#     app: prometheus-server
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: prometheus-server
#   template:
#     metadata:
#       labels:
#         app: prometheus-server
#       annotations:
#         prometheus.io/scrape: "true"
#         prometheus.io/port: "9090"
#     spec:
#       serviceAccountName: prometheus
#       containers:
#       - name: prometheus-server
#         image: prom/prometheus
#         ports:
#           - containerPort: 9090
#         args:
#           - '--storage.tsdb.retention=12h'
#           - '--storage.tsdb.path=/prometheus'
#           - '--config.file=/etc/prometheus/prometheus.yml'
#         volumeMounts:
#           - name: prometheus-config-volume
#             mountPath: /etc/prometheus/
#           - name: prometheus-storage-volume
#             mountPath: /prometheus/
#       volumes:
#         - name: prometheus-config-volume
#           configMap:
#             defaultMode: 420
#             name: prometheus-config
#         - name: prometheus-storage-volume
#           emptyDir: {}
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: prometheus-service
#   namespace: monitoring
#   labels:
#     app: prometheus-server
#   annotations:
#     prometheus.io/scrape: 'true'
#     prometheus.io/port:   '9090'
# spec:
#   selector:
#     app: prometheus-server
#   type: NodePort
#   ports:
#   - port: 9090
#     targetPort: 9090 
#     nodePort: 30100
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   namespace: monitoring
#   name: prometheus-config
#   labels:
#     app: prometheus-server
# data:
#   prometheus.yml: |
#     global:
#       scrape_interval: 5s
#       evaluation_interval: 5s
    
#     scrape_configs:
#     - job_name: 'prometheus'
#       static_configs:
#       - targets: ['prometheus-service.monitoring.svc.cluster.local:9090']

#     - job_name: 'kube-nodes'
#       scheme: https
#       tls_config:
#         ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#       bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#       kubernetes_sd_configs:
#       - role: node
#       relabel_configs:
#       - action: labelmap
#         regex: __meta_kubernetes_node_label_(.+)
#       - target_label: __address__
#         replacement: kubernetes.default.svc:443
#       - source_labels: [__meta_kubernetes_node_name]
#         regex: (.+)
#         target_label: __metrics_path__
#         replacement: /api/v1/nodes/${1}/proxy/metrics





#     # - job_name: 'kube-apisrv'
#     #   kubernetes_sd_configs:
#     #   - role: endpoints
#     #   scheme: https
#     #   tls_config:
#     #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#     #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#     #   relabel_configs:
#     #   - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
#     #     action: keep
#     #     regex: default;kubernetes;https

#     # - job_name: 'kubernetes-nodes'
#     #   scheme: https
#     #   tls_config:
#     #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#     #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#     #   kubernetes_sd_configs:
#     #   - role: node

#       # - job_name: 'kubernetes-pods'
#       #   kubernetes_sd_configs:
#       #   - role: pod
#       #   relabel_configs:
#       #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
#       #     action: keep
#       #     regex: true
#       #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
#       #     action: replace
#       #     target_label: __metrics_path__
#       #     regex: (.+)
#       #   - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
#       #     action: replace
#       #     regex: ([^:]+)(?::\d+)?;(\d+)
#       #     replacement: $1:$2
#       #     target_label: __address__
#       #   - action: labelmap
#       #     regex: __meta_kubernetes_pod_label_(.+)
#       #   - source_labels: [__meta_kubernetes_namespace]
#       #     action: replace
#       #     target_label: kubernetes_namespace
#       #   - source_labels: [__meta_kubernetes_pod_name]
#       #     action: replace
#       #     target_label: kubernetes_pod_name

#       # - job_name: 'kubernetes-cadvisor'
#       #   scheme: https
#       #   tls_config:
#       #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#       #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#       #   kubernetes_sd_configs:
#       #   - role: node
#       #   relabel_configs:
#       #   - action: labelmap
#       #     regex: __meta_kubernetes_node_label_(.+)
#       #   - target_label: __address__
#       #     replacement: kubernetes.default.svc:443
#       #   - source_labels: [__meta_kubernetes_node_name]
#       #     regex: (.+)
#       #     target_label: __metrics_path__
#       #     replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      
#       # - job_name: 'kubernetes-service-endpoints'
#       #   kubernetes_sd_configs:
#       #   - role: endpoints
#       #   relabel_configs:
#       #   - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
#       #     action: keep
#       #     regex: true
#       #   - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
#       #     action: replace
#       #     target_label: __scheme__
#       #     regex: (https?)
#       #   - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
#       #     action: replace
#       #     target_label: __metrics_path__
#       #     regex: (.+)
#       #   - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
#       #     action: replace
#       #     target_label: __address__
#       #     regex: ([^:]+)(?::\d+)?;(\d+)
#       #     replacement: $1:$2
#       #   - action: labelmap
#       #     regex: __meta_kubernetes_service_label_(.+)
#       #   - source_labels: [__meta_kubernetes_namespace]
#       #     action: replace
#       #     target_label: kubernetes_namespace
#       #   - source_labels: [__meta_kubernetes_service_name]
#       #     action: replace
#       #     target_label: kubernetes_name

#       # - job_name: 'node-exporter'
#       #   kubernetes_sd_configs:
#       #     - role: endpoints
#       #   relabel_configs:
#       #   - source_labels: [__meta_kubernetes_endpoints_name]
#       #     regex: 'node-exporter'
#       #     action: keep

#       # - job_name: 'blackbox'
#       #   scrape_timeout: 15s
#       #   scrape_interval: 15s
#       #   metrics_path: /probe
#       #   params:
#       #     module: [http_2xx]
#       #   static_configs:
#       #   - targets:
#       #       - http://prometheus-service.monitoring.svc:9090
             
#       #   relabel_configs:
#       #   - source_labels: [__address__]
#       #     target_label: __param_target
#       #   - source_labels: [__param_target]
#       #     target_label: instance
#       #   - target_label: __address__
#       #     replacement: blackbox:9115